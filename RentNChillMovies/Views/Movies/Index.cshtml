@model RentNChillMovies.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@using Microsoft.AspNetCore.Identity

<h1>
    MOVIES FOR YOUR PLEASURE
</h1>
@if (SignInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
{
    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <div class="input-group mb-3">
            <div class="col-xs-2">
                <select class="custom-select" asp-for="MovieGenre" asp-items="Model.Genres">
                    <option value="">All</option>
                </select>
            </div>
            <div class="col-xs-2">
                <input type="text" name="SearchString" class="form-control" placeholder="Title">
            </div>
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">FILTER</button>
            </div>
        </div>

    </p>
</form>

<div class="card-deck">
    @foreach (var item in Model.Movies)
    {
        <div class="col-sm-3 mb-3">
            <div class="card">
                <a asp-controller="Movies" asp-action="Details" asp-route-id="@item.MovieId">
                    <img class="card-img-top" src="@Url.Content(item.MovieThumbnail)" alt="Card image">
                     <div class="card-text">
                            <i class="fa fa-thumbs-up"> @Model.UserLikes.Where(b => b.MovieId == item.MovieId).Where(c => c.IsLike == true).Count() </i>
                         </div>
                         <div class="card-text">
                            <i class="fa fa-thumbs-down">  @Model.UserLikes.Where(b => b.MovieId == item.MovieId).Where(c => c.IsDislike == true).Count() </i>
                        </div>
                       
                </a>
                <div class="card-body" style="width: 100px; height: 100px;">
                    <a class="h4" asp-action="Details" asp-route-id="@item.MovieId">
                        <h4 class="card-title btn-link">
                            @Html.DisplayFor(modelItem => item.MovieTitle)
                        </h4>
                       
                      
                    </a>
                    
                    
                </div>
            </div>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
            {
                <div class="card-footer">
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.MovieId">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.MovieId">Delete</a>
                </div>
            }
            else if (SignInManager.IsSignedIn(User) && User.IsInRole("Customer"))
            {
                <div class="card-footer">

                    <a asp-controller="Rental" class="btn btn-danger" asp-action="NewRental" asp-route-id="@item.MovieId">Rent</a>
                </div>
            }
            

        </div>
    }

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
    @if (TempData["Success"] != null)
    {
        <script type="text/javascript">toastr.success("@TempData["Success"]", "Success!", { timeOut: 3000 });</script>
    }
    @if (TempData["Fail"] != null)
    {
        <script type="text/javascript">toastr.error("@TempData["Fail"]", "Error!", { timeOut: 3000 });</script>
    }

}